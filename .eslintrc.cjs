module.exports = {
    root: true,
    extends: [
        'eslint:recommended',
        'plugin:react-hooks/recommended',
        'plugin:@tanstack/eslint-plugin-query/recommended',
    ],
    parser: '@typescript-eslint/parser',
    parserOptions: {
        ecmaVersion: 6,
        sourceType: 'module',
        ecmaFeatures: {
            jsx: true,
        },
    },
    plugins: ['react', '@typescript-eslint', 'jsx-a11y', '@tanstack/query', 'prettier', 'unused-imports'],
    env: {
        es2020: true,
        es6: true,
        browser: true,
        node: true,
        jquery: true,
        jest: true,
    },
    globals: {
        JSX: true,
        NodeJS: true,
        React: true,
    },
    settings: {
        react: {
            version: 'detect',
        },
        'import/parsers': {
            '@typescript-eslint/parser': ['.ts', '.tsx'],
        },
        'import/resolver': {
            typescript: {},
            alias: {
                map: [['test-utils', './src/test-utils']],
                extensions: ['.ts', '.tsx', '.js', '.jsx', '.json'],
            },
        },
    },
    rules: {
        'unused-imports/no-unused-imports': 'error',
        eqeqeq: [2, 'always'],
        indent: ['error', 4],
        'jsx-quotes': 2,
        'max-len': [2, { code: 120, ignoreStrings: true }],
        'max-lines': [2, { max: 10000, skipBlankLines: true, skipComments: true }],
        'no-console': 'warn',
        'no-debugger': 2,
        'no-var': 2,
        'object-curly-spacing': [2, 'always', { arraysInObjects: false }],
        quotes: [2, 'single', { allowTemplateLiterals: true }],
        semi: [2, 'always'],
        'max-depth': [2, { max: 10 }],
        'max-params': [2, { max: 3 }],
        'no-duplicate-imports': 2,
        'no-unreachable': 2,
        'no-unused-vars': 0,
        // 'react/display-name': [2, { ignoreTranspilerName: false }],
        'react/default-props-match-prop-types': 2,
        'react/forbid-prop-types': [2, { forbid: ['any'] }],
        'react/no-danger': 2,
        'react/no-did-mount-set-state': 2,
        'react/no-direct-mutation-state': 2,
        'react/no-multi-comp': 2,
        'react/no-unknown-property': 2,
        'react/no-unused-state': 2,
        'react/prefer-es6-class': 2,
        // 'react/prop-types': 2,
        // 'react/require-default-props': 2,
        'react/self-closing-comp': 2,
        'react/sort-comp': 2,
        // 'react/sort-prop-types': [2, { ignoreCase: true }],
        'react/jsx-curly-spacing': 2,
        'react/jsx-key': 2,
        'react/jsx-max-depth': [2, { max: 10 }],
        'react/jsx-no-duplicate-props': 2,
        'react/jsx-no-undef': 2,
        'react/jsx-pascal-case': 2,
        // 'react/sort-default-props': [2, { ignoreCase: true }],
        // 'react/jsx-sort-props': [2, { ignoreCase: true }],
        'react/jsx-uses-react': 2,
        'react/jsx-uses-vars': 2,
        'react/jsx-wrap-multilines': 2,
        'react/jsx-handler-names': [2, { eventHandlerPrefix: 'handle' }],
        '@typescript-eslint/no-duplicate-enum-values': 2,
        '@typescript-eslint/no-empty-interface': 2,
        '@typescript-eslint/no-unused-vars': 'warn',
        // '@typescript-eslint/sort-type-union-intersection-members': 'warn',
        'jsx-a11y/alt-text': [
            2,
            {
                elements: ['img', 'object', 'area', 'input[type="image"]'],
                img: ['Image'],
                object: ['Object'],
                area: ['Area'],
                'input[type="image"]': ['InputImage'],
            },
        ],
        '@tanstack/query/exhaustive-deps': 'error',
        '@tanstack/query/prefer-query-object-syntax': 'error',
    },
};
